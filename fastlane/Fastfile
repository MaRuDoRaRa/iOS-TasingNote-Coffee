# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.55.0"

default_platform :ios


platform :ios do
  before_all do
  	# info piist path
  	ENV["INFO_PLIST_PATH"] = "./TastingNote-Coffee/Info.plist" 
  	# scheme
  	ENV["SCHEME"] = "TastingNote-Coffee"
    # certificates git branch  	
  	ENV["DEV_CERTIFICATES_GIT_BRANCH"] = "tasting-note.coffee.wildcard"
  	ENV["CERTIFICATES_GIT_BRANCH"] = "tasting-note.coffee"
    # bundle identifier
    ENV["DEV_BUNDLE_IDENTIFIER"] = "jp.junic.tasting-note.coffee.*"
    ENV["BUNDLE_IDENTIFIER"] = "jp.junic.tasting-note.coffee"
    # crashlytics
    ENV["CRASHLYTICS_API_TOKEN"] = "6cb0cc9d48b1339629f655b453be597013aa0899"
    ENV["CRASHLYTICS_BUILD_SECRET"] = "90385b5b011ee156cdf8ab4852a4a84b86a811f5d4c91dc09b8b00b745607a07"
    # slack
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
  end

  desc “install development certificates to local device"
  lane :certificates do
    # install certificates
    match(
      type: "development", 
      git_branch: ENV["DEV_CERTIFICATES_GIT_BRANCH"],
      app_identifier: ENV["DEV_BUNDLE_IDENTIFIER"],
      readonly: true)
  end

  desc “deploy debug build to fabric/crashlytics"
  lane :beta do
  	# update bundle version
    set_info_plist_value(
      path: ENV["INFO_PLIST_PATH"],
      key: "CFBundleVersion",
      value: ENV["BITRISE_BUILD_NUMBER"]
    )
    # install certificates
    match(
      type: "development",
      git_branch: ENV["DEV_CERTIFICATES_GIT_BRANCH"],
      app_identifier: "jp.junic.tasting-note.coffee.*"
    )
    # build
    gym(
      scheme: ENV["SCHEME"],
      configuration: "Debug",
      export_method: "development"
    )
    # deploy
    crashlytics(
      notes: "Distributed with fastlane", 
      notifications: true
    )
  end

  desc “deploy release build to testflight"
  lane :release do
    # update bundle version
    set_info_plist_value(
      path: ENV["INFO_PLIST_PATH"],
      key: "CFBundleVersion",
      value: ENV["BITRISE_BUILD_NUMBER"]
    )
    # install certificates
    match(
      type: "appstore",
      git_branch: ENV["CERTIFICATES_GIT_BRANCH"],
      app_identifier: ENV["BUNDLE_IDENTIFIER"]
    )
    # build
    gym(
      scheme: ENV["SCHEME"],
      configuration: "Release",
      export_method: "app-store"
    )
    # deploy
    pilot
  end

  after_all do |lane|
  	case lane
  	when "beta", "release"
      slack(
        message: "Successfully deployed new App Update."
      )
  	end
  end

  error do |lane, exception|
  	case lane
  	when "beta", "release"
      slack(
        message: exception.message,
        success: false
      )
  	end
  end
end